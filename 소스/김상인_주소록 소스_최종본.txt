#include<stdio.h>
#include<string.h>
#include<math.h>
#include<stdlib.h>
#include<conio.h>
#define _CRT_SECURE_NO_WARNINGS

#define MAX 200 //맥스 넘버 200고정 

typedef struct { // Data변수 구조체 char타입
    char name[40];
    char number[30];
    char mail[50];
}Data;

// 포인터 변수 ptr 은 Data(char)형 변수의 주소 값을 저장하고 있다.

int friend = 0; // 저장된 번호 수

int main(void) {
    int menu;
    Data data[MAX]; // 사용자 정보 저장구조체



    while (1) {
        printf("-----------------------------------------------------------------------------------\n");
        printf("1) 전화번호 등록  2) 전화번호 삭제  3) 전화번호 조회 4) 전화번호 검색 5) 앱 종료\n");
        printf("-----------------------------------------------------------------------------------\n");
        printf(" 원하시는 메뉴를 입력해 주세요 (ex : 1: 등록 , 2 : 삭제) >> \n");
        printf("입력 : ");
        scanf_s("%d", &menu, 4);
        system("cls");
        if (menu == 1) {
            printf("\n 등록 \n");
            insert(data, &friend);
        }
        else if (menu == 2) {
            printf("\n 삭제 \n");
            delete(data, &friend);
        }
        else if (menu == 3) {
            printf("\n 조회 \n");
            showdata(data, &friend);
        }
        else if (menu == 4) {
            printf("\n 검색 \n");
            search(data, &friend);

        }
        else if (menu == 5) {
            return 0;
        }
        else {
            printf("\n 잘못된 입력입니다. 다시 입력해 주세요\n");
        }
    }

    return 0;
}
//번호 추가
int insert(Data* ptr, int* num) {
    int choice;
    if (*num < MAX) {
        printf("이름 입력 : ");
        scanf_s("%s", ptr[*num].name, sizeof(ptr[*num]));
        printf("번호 입력 : ");
        scanf_s("%s", ptr[*num].number, sizeof(ptr[*num]));
        printf("메일 입력 : ");
        scanf_s("%s", ptr[*num].mail, sizeof(ptr[*num]));
        printf("\n\n");
        system("cls");
        printf("등록하신 정보가 맞으신가요?\n\n");
        printf("이름 : %s  \n번호 : %s \n메일 : %s \n\n", ptr[*num].name, ptr[*num].number, ptr[*num].mail);
        printf("1.네 2.아니요\n\n");
        printf("입력 : ");
        scanf_s("%d", &choice);
        if (choice == 1) {
            system("cls");
            printf("등록이 완료되었습니다!\n");
            (*num)++;
        }
        else if (choice == 2) {
            do {
                printf("\n\n");
                printf("다시 입력해주세요.\n");
                printf("이름 : ");
                scanf_s("%s", ptr[*num].name, sizeof(ptr[*num]));
                printf("번호 : ");
                scanf_s("%s", ptr[*num].number, sizeof(ptr[*num]));
                printf("메일 : ");
                scanf_s("%s", ptr[*num].mail, sizeof(ptr[*num]));
                printf("\n\n");
                printf("등록하신 정보가 맞으신가요?\n");
                printf("1.네 2.아니요\n");
                printf("입력 : ");
                scanf_s("%d", &choice);
                printf("\n\n");
            } while (choice != 1);
            (*num)++;
            system("cls");
            printf("저장 되었습니다.\n");
        }
        else {
            printf("1번과 2번만 입력 가능합니다!!\n");
            printf("다시 입력해 주세요!!\n");
            printf("1.네 2.아니요\n");
            printf("입력 : ");
            scanf_s("%d", &choice);
            system("cls");
        }
        printf("\n");

    }
    else if (*num > MAX) {
        printf("전화번호부가 가득 찼습니다. 정보를 삭제 해 주세요.\n");
    }
    return 0;
}

int search(Data* ptr, int* num) {
    char name[40];
    int i, j;
    // 등록된 사람 번호  > 0
    if (*num > 0) {
        printf("이름 입력 : ");
        scanf_s("%s", name, sizeof(name));
        for (i = 0; i < MAX; i++) {

            if (strcmp(name, ptr[i].name) == 0) {
                printf("----------------------------------------------------------------\n");
                printf("이름 : %s ", ptr[i].name);
                printf("번호 : %s ", ptr[i].number);
                printf("메일 : %s \n", ptr[i].mail);
                printf("----------------------------------------------------------------\n");
                goto END;
            }
        }
        printf("\n");
        printf("저장되어 있지 않습니다!!\n");
        printf("\n");
    }
    else {
        printf("등록된 사람이 없습니다!!\n");
    }
END:;
}


int delete(Data* ptr, int* num) {
    char name[40];
    int i, j;

    //번호 > 0
    if (*num > 0) {
        printf("이름 입력 : ");
        scanf_s("%s", name, sizeof(name));

        for (i = 0; i < MAX; i++) {
            //문자열이므로 비교하기위해 strcmp사용
            if (strcmp(name, ptr[i].name) == 0) {
                (*num)--;
                printf("  삭제 되었습니다. \n\n");

                //데이터 != full
                if (i != MAX - 1) {
                    for (j = i; j < MAX; j++) {
                        ptr[j] = ptr[j + 1];
                       
                    }
                    //배열의 마지막을 NULL로 바꿈
                    *ptr[MAX - 1].name = NULL;
                    *ptr[MAX - 1].number = NULL;
                    *ptr[MAX - 1].mail = NULL;
                }
                //데이터 == full
                else {
                    //배열의 마지막을 NULL로 바꿈
                    *ptr[MAX - 1].name = NULL;
                    *ptr[MAX - 1].number = NULL;
                    *ptr[MAX - 1].mail = NULL;
                }
                return 0;
            }
        }
        printf("찾을수 없습니다. \n\n");
        return 0;
    }

    else {
        printf("  정보가 없습니다. \n\n");
        return 0;
    }
}


int showdata(Data* ptr, int* num) {
    if (*num > 0) {

        for (int i = 0; i < *num; i++) {
            printf("----------------------------------------------------------------\n");
            printf("이름 : %s ", ptr[i].name);
            printf("번호 : %s ", ptr[i].number);
            printf("메일 : %s \n", ptr[i].mail);
            printf("----------------------------------------------------------------\n");

        }

    }
    else { printf("정보가 없습니다. 정보를 추가해 주세요\n"); }
    return 0;
}